[2021-09-07 06:08:29,199] {taskinstance.py:903} INFO - Dependencies all met for <TaskInstance: json_etl_dag.create_tables 2021-09-07T06:08:27.273628+00:00 [queued]>
[2021-09-07 06:08:29,208] {taskinstance.py:903} INFO - Dependencies all met for <TaskInstance: json_etl_dag.create_tables 2021-09-07T06:08:27.273628+00:00 [queued]>
[2021-09-07 06:08:29,209] {taskinstance.py:1094} INFO - 
--------------------------------------------------------------------------------
[2021-09-07 06:08:29,209] {taskinstance.py:1095} INFO - Starting attempt 1 of 1
[2021-09-07 06:08:29,209] {taskinstance.py:1096} INFO - 
--------------------------------------------------------------------------------
[2021-09-07 06:08:29,220] {taskinstance.py:1114} INFO - Executing <Task(PostgresOperator): create_tables> on 2021-09-07T06:08:27.273628+00:00
[2021-09-07 06:08:29,223] {standard_task_runner.py:52} INFO - Started process 30994 to run task
[2021-09-07 06:08:29,225] {standard_task_runner.py:76} INFO - Running: ['***', 'tasks', 'run', 'json_etl_dag', 'create_tables', '2021-09-07T06:08:27.273628+00:00', '--job-id', '235', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/etl.py', '--cfg-path', '/tmp/tmp8hpc8cul', '--error-file', '/tmp/tmpgdrnlist']
[2021-09-07 06:08:29,225] {standard_task_runner.py:77} INFO - Job 235: Subtask create_tables
[2021-09-07 06:08:29,255] {logging_mixin.py:109} INFO - Running <TaskInstance: json_etl_dag.create_tables 2021-09-07T06:08:27.273628+00:00 [running]> on host 731700afc5ff
[2021-09-07 06:08:29,300] {taskinstance.py:1251} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=json_etl_dag
AIRFLOW_CTX_TASK_ID=create_tables
AIRFLOW_CTX_EXECUTION_DATE=2021-09-07T06:08:27.273628+00:00
AIRFLOW_CTX_DAG_RUN_ID=manual__2021-09-07T06:08:27.273628+00:00
[2021-09-07 06:08:29,301] {postgres.py:68} INFO - Executing: 
            DROP TABLE IF EXISTS users_temp;
            DROP TABLE IF EXISTS posts_temp;
            CREATE TABLE IF NOT EXISTS posts (id INT PRIMARY KEY, userId INT, title TEXT, body TEXT);
            CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, name TEXT, username TEXT, email TEXT, address_street TEXT, address_suite TEXT, address_city TEXT, address_zipcode TEXT, address_geo_lat numeric, address_geo_lng numeric, phone TEXT, website TEXT, company_name TEXT, company_catchPhrase TEXT, company_bs TEXT);
            CREATE TABLE IF NOT EXISTS users_temp AS SELECT * FROM users WHERE 1=0;
            CREATE TABLE IF NOT EXISTS posts_temp AS SELECT * FROM posts WHERE 1=0;
        
[2021-09-07 06:08:29,309] {base.py:70} INFO - Using connection to: id: nickel-aws. Host: nickel.caybmxchvlv1.us-east-1.rds.amazonaws.com, Port: 5432, Schema: , Login: postgres, Password: ***, extra: {}
[2021-09-07 06:08:29,858] {dbapi.py:204} INFO - Running statement: 
            DROP TABLE IF EXISTS users_temp;
            DROP TABLE IF EXISTS posts_temp;
            CREATE TABLE IF NOT EXISTS posts (id INT PRIMARY KEY, userId INT, title TEXT, body TEXT);
            CREATE TABLE IF NOT EXISTS users (id INT PRIMARY KEY, name TEXT, username TEXT, email TEXT, address_street TEXT, address_suite TEXT, address_city TEXT, address_zipcode TEXT, address_geo_lat numeric, address_geo_lng numeric, phone TEXT, website TEXT, company_name TEXT, company_catchPhrase TEXT, company_bs TEXT);
            CREATE TABLE IF NOT EXISTS users_temp AS SELECT * FROM users WHERE 1=0;
            CREATE TABLE IF NOT EXISTS posts_temp AS SELECT * FROM posts WHERE 1=0;
        , parameters: None
[2021-09-07 06:08:30,029] {dbapi.py:212} INFO - Rows affected: 0
[2021-09-07 06:08:30,120] {postgres.py:72} INFO - NOTICE:  table "users_temp" does not exist, skipping

[2021-09-07 06:08:30,120] {postgres.py:72} INFO - NOTICE:  table "posts_temp" does not exist, skipping

[2021-09-07 06:08:30,120] {postgres.py:72} INFO - NOTICE:  relation "posts" already exists, skipping

[2021-09-07 06:08:30,120] {postgres.py:72} INFO - NOTICE:  relation "users" already exists, skipping

[2021-09-07 06:08:30,129] {taskinstance.py:1211} INFO - Marking task as SUCCESS. dag_id=json_etl_dag, task_id=create_tables, execution_date=20210907T060827, start_date=20210907T060829, end_date=20210907T060830
[2021-09-07 06:08:30,159] {local_task_job.py:151} INFO - Task exited with return code 0
[2021-09-07 06:08:30,180] {local_task_job.py:261} INFO - 1 downstream tasks scheduled from follow-on schedule check
